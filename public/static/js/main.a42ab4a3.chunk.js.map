{"version":3,"sources":["images/delete.svg","images/pencil.svg","components/login.js","context/userContext.js","api/requestAPI.js","components/navbar.js","components/confirmationPopup.js","components/deleteReview.js","components/editReview.js","components/review.js","components/postReview.js","components/bookDetail.js","components/searchBar.js","components/book.js","components/books.js","components/filteredBooks.js","components/home.js","components/addBook.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginWithGithub","props","href","React","createContext","isLogin","user","postReq","url","data","fetch","method","headers","body","JSON","stringify","Promise","resolve","reject","then","res","jsonResponse","json","status","catch","err","bookId","imageUrl","blob","reader","FileReader","onerror","onload","result","readAsDataURL","convertBlobToBase64","reviewId","reviewText","NavBar","useContext","UserContext","loginDetails","setLoginDetails","useEffect","requestAPI","userDetails","className","to","activeClassName","onClick","login","ComfirmationPopup","onDelete","onCancel","DeleteReview","useState","isVisible","setIsVisible","handleClick","src","delete_img","alt","EditReview","setReviewText","value","onChange","event","target","updateReview","cancelEditMode","Review","reviewid","username","reviewtext","reviewdate","editMode","setEditMode","toggleReviewEditable","reviewTextContainer","updatedReview","edit_img","Date","toUTCString","PostReview","BookDetail","useParams","bookDetail","setBookDetail","reviews","setReviews","image","setImage","frontimage","title","writer","length","map","review","key","SearchBar","type","placeholder","e","Book","id","Books","bookList","books","bookDetails","FilteredBooks","setBookList","searchText","setSearchText","filter","book","toLowerCase","includes","Home","class","AddBook","setTitle","setWriter","description","setDescription","bookImage","setBookImage","history","useHistory","handleChange","setValue","action","tabindex","required","files","name","formData","FormData","append","console","log","push","Main","exact","path","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a42ab4a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.650cdc57.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.aa0b5ae2.svg\";","import React from 'react';\n\nconst LoginWithGithub = (props) => {\n  return (\n    <div>\n      <a href=\"https://github.com/login/oauth/authorize?client_id=48185bdb82c854d22f89\">\n        Login\n      </a>\n    </div>\n  );\n};\n\nexport default LoginWithGithub;\n","import React from 'react';\n\nexport default React.createContext({ isLogin: false, user: null });\n","const postReq = (url, data) => {\n  return fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data)\n  });\n};\n\nconst getUser = () => {\n  return new Promise((resolve, reject) => {\n    fetch('/api/getUser')\n      .then((res) => {\n        const jsonResponse = res.json();\n        if (res.status === 403) {\n          reject(jsonResponse);\n          return;\n        }\n        resolve(jsonResponse);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nconst getBooks = () => {\n  return new Promise((resolve, reject) => {\n    fetch('/api/getBooks').then((res) => {\n      resolve(res.json());\n    });\n  });\n};\n\nconst getBook = (bookId) => {\n  return new Promise((resolve, reject) => {\n    fetch(`/api/getBook?bookId=${bookId}`)\n      .then((res) => {\n        resolve(res.json());\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nconst getReviewOfBook = (bookId) => {\n  return new Promise((resolve, reject) => {\n    fetch(`/api/getReviewOfBook?bookId=${bookId}`).then((res) => {\n      resolve(res.json());\n    });\n  });\n};\n\nconst convertBlobToBase64 = (blob) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n};\n\nconst fetchImage = (imageUrl) => {\n  return fetch(imageUrl)\n    .then((res) => res.blob())\n    .then((blob) => convertBlobToBase64(blob));\n};\n\nconst addReview = (bookId, reviewText) =>\n  postReq('/api/addReview', { bookId, reviewText });\n\nconst deleteReview = (reviewId) => postReq('/api/deleteReview', { reviewId });\nconst updateReview = (reviewId, reviewText) =>\n  postReq('/api/updateReview', { reviewId, reviewText });\n\nconst logout = () => postReq('/api/logout');\n\nexport default {\n  getUser,\n  getBooks,\n  getBook,\n  logout,\n  getReviewOfBook,\n  fetchImage,\n  deleteReview,\n  addReview,\n  updateReview\n};\n","import React, { useContext, useEffect } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport LoginWithGithub from './login';\nimport UserContext from '../context/userContext';\nimport requestAPI from '../api/requestAPI';\n\nconst NavBar = (props) => {\n  const [loginDetails, setLoginDetails] = useContext(UserContext);\n\n  useEffect(() => {\n    requestAPI\n      .getUser()\n      .then((userDetails) => {\n        if (userDetails) {\n          setLoginDetails({ isLogin: true, user: userDetails });\n        }\n      })\n      .catch((err) => {\n        setLoginDetails({ isLogin: false, user: null });\n      });\n  }, [setLoginDetails]);\n\n  const handleLogout = function() {\n    requestAPI.logout().then(() => {\n      setLoginDetails({ isLogin: false, user: null });\n    });\n  };\n\n  if (loginDetails.isLogin) {\n    const { user } = loginDetails;\n    return (\n      <div className=\"navbar\">\n        <div className=\"navbar-right\">\n          <Link to=\"/\">\n            <h3>Reader's Junction</h3>\n          </Link>\n          <NavLink to=\"/addBook\" activeClassName=\"selectedLink\">\n            <p>Add Book</p>\n          </NavLink>\n        </div>\n        <div>\n          <button className=\"btnlink\" onClick={handleLogout}>\n            Logout\n          </button>\n          <span>{user.login}</span>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"navbar\">\n      <div>\n        <Link to=\"/\">\n          <h3>Reader's Junction</h3>\n        </Link>\n      </div>\n      <div>\n        <LoginWithGithub />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst ComfirmationPopup = (props) => {\n  const { onDelete, onCancel } = props;\n  return (\n    <div className=\"modal\">\n      <div className=\"popup-box\">\n        <div className=\"popup-heading\">Do you want to delete review ?</div>\n        <div className=\"popup-btn\">\n          <button className=\"danger-btn\" onClick={onDelete}>\n            Delete\n          </button>\n          <button className=\"cancel-btn\" onClick={onCancel}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComfirmationPopup;\n","import React, { useState } from 'react';\nimport delete_img from '../images/delete.svg';\nimport ComfirmationPopup from './confirmationPopup';\n\nconst DeleteReview = (props) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleClick = () => {\n    setIsVisible(!isVisible);\n  };\n\n  return (\n    <div>\n      {isVisible && (\n        <ComfirmationPopup onDelete={props.onClick} onCancel={handleClick} />\n      )}\n      <img\n        className=\"review-delete-btn\"\n        onClick={handleClick}\n        src={delete_img}\n        alt=\"Delete review\"\n      />\n    </div>\n  );\n};\n\nexport default DeleteReview;\n","import React, { useState } from 'react';\n\nconst EditReview = (props) => {\n  const [reviewText, setReviewText] = useState(props.reviewText);\n\n  const handleChange = (event) => {\n    setReviewText(event.target.value);\n  };\n\n  return (\n    <div className=\"update-review-container\">\n      <textarea\n        value={reviewText}\n        className=\"post-review-textArea\"\n        onChange={handleChange}\n      />\n      <div>\n        <button\n          className=\"update-review-btn\"\n          onClick={() => props.updateReview(reviewText)}\n        >\n          Update Review\n        </button>\n        <button className=\"cancel-review-btn\" onClick={props.cancelEditMode}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditReview;\n","import React, { useState, useContext } from 'react';\nimport DeleteReview from './deleteReview';\nimport requestAPI from '../api/requestAPI';\nimport EditReview from './editReview';\nimport edit_img from '../images/pencil.svg';\nimport UserContext from '../context/userContext';\n\nconst Review = (props) => {\n  const { reviewid, username, reviewtext, reviewdate } = props;\n  const [editMode, setEditMode] = useState(false);\n\n  const [{ isLogin, user }] = useContext(UserContext);\n\n  const deleteReview = () => {\n    requestAPI.deleteReview(reviewid).then(() => {\n      props.updateReview();\n    });\n  };\n\n  const toggleReviewEditable = () => {\n    setEditMode(!editMode);\n  };\n\n  const updateReview = (updatedReview) => {\n    requestAPI.updateReview(reviewid, updatedReview).then(() => {\n      props.updateReview();\n      toggleReviewEditable();\n    });\n  };\n\n  const reviewTextContainer = editMode ? (\n    <EditReview\n      reviewText={reviewtext}\n      updateReview={updateReview}\n      cancelEditMode={toggleReviewEditable}\n    />\n  ) : (\n    <div className=\"review-text\">{reviewtext}</div>\n  );\n  return (\n    <div className=\"review-box\">\n      <div className=\"review-header\">\n        <b>\n          <i>{username}</i>\n        </b>\n        {isLogin && user.login === username && (\n          <div className=\"review-action-btn\">\n            <DeleteReview onClick={deleteReview} />\n            <img\n              className=\"review-edit-btn\"\n              onClick={toggleReviewEditable}\n              src={edit_img}\n              alt=\"Edit review\"\n            />\n          </div>\n        )}\n      </div>\n      {reviewTextContainer}\n      <div className=\"review-time\">\n        <span>{new Date(reviewdate).toUTCString()}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Review;\n","import React, { useState } from 'react';\nimport requestAPI from '../api/requestAPI';\n\nconst PostReview = (props) => {\n  const { bookId } = props;\n\n  const [reviewText, setReviewText] = useState('');\n\n  const postReview = () => {\n    requestAPI.addReview(bookId, reviewText).then(() => {\n      props.updateReview();\n      setReviewText('');\n    });\n  };\n  \n  const handleChange = (event) => {\n    setReviewText(event.target.value);\n  };\n\n  return (\n    <div className=\"post-review-container\">\n      <textarea\n        value={reviewText}\n        className=\"post-review-textArea\"\n        onChange={handleChange}\n      />\n      <div>\n        <button className=\"post-review-btn\" onClick={postReview}>\n          Post Review\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PostReview;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport requestAPI from '../api/requestAPI';\nimport Review from './review';\nimport PostReview from './postReview';\nimport UserContext from '../context/userContext';\n\nconst BookDetail = (props) => {\n  const [loginDetails] = useContext(UserContext);\n  const { bookId } = useParams();\n  const [bookDetail, setBookDetail] = useState({});\n  const [reviews, setReviews] = useState([]);\n  const [image, setImage] = useState('');\n\n  const updateReview = () => {\n    requestAPI.getReviewOfBook(bookId).then(setReviews);\n  };\n\n  useEffect(() => {\n    requestAPI.getBook(bookId).then(setBookDetail);\n    requestAPI.getReviewOfBook(bookId).then(setReviews);\n  }, [bookId]);\n\n  useEffect(() => {\n    bookDetail.frontimage &&\n      requestAPI.fetchImage(bookDetail.frontimage).then(setImage);\n  }, [bookDetail.frontimage]);\n\n  return (\n    <div>\n      <div className=\"book-container\">\n        <img src={image} alt={bookDetail.title}></img>\n        <div className=\"detail\">\n          <h2>{bookDetail.title}</h2>\n          <p>by {bookDetail.writer}</p>\n          <p>\n            {reviews.length} review{reviews.length > 1 ? 's' : ''}\n          </p>\n        </div>\n      </div>\n      <div className=\"review-container\">\n        {reviews.map((review) => {\n          return (\n            <Review\n              key={review.reviewid}\n              {...review}\n              updateReview={updateReview}\n            />\n          );\n        })}\n      </div>\n      <div>\n        {loginDetails.isLogin && (\n          <PostReview bookId={bookId} updateReview={updateReview} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BookDetail;\n","import React from 'react';\n\nconst SearchBar = (props) => {\n  return (\n    <div className={props.className}>\n      <input\n        type=\"text\"\n        value={props.value}\n        placeholder=\"Search Books..\"\n        onChange={(e) => props.onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport requestAPI from '../api/requestAPI';\n\nconst Book = (props) => {\n  const { id, frontimage, title } = props;\n  const [image, setImage] = useState('');\n\n  useEffect(() => {\n    requestAPI.fetchImage(frontimage).then(setImage);\n  }, [frontimage]);\n\n  return (\n    <div className=\"book-card\">\n      <Link to={`/book/${id}`}>\n        <img src={image} alt=\"Avatar\" className=\"book-card-img\" />\n      </Link>\n      <div className=\"book-detail\">\n        <h4>\n          <b>{title}</b>\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React from 'react';\nimport Book from './book';\n\nconst Books = (props) => {\n  const { bookList } = props;\n  if (bookList.length === 0) {\n    return (\n      <div className=\"book-list-container\">\n        <h3>Book not found.</h3>\n      </div>\n    );\n  }\n  const books = bookList.map((bookDetails) => {\n    return <Book {...bookDetails} key={bookDetails.id} />;\n  });\n  return <div className=\"book-list-container\">{books}</div>;\n};\n\nexport default Books;\n","import React, { useState, useEffect } from 'react';\nimport requestAPI from '../api/requestAPI';\nimport SearchBar from './searchBar';\nimport Books from './books';\n\nconst FilteredBooks = (props) => {\n  const [bookList, setBookList] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    requestAPI.getBooks().then(setBookList);\n  }, []);\n\n  const handleSearchTextChange = (value) => {\n    setSearchText(value);\n  };\n\n  const filterBooks = (title) => {\n    return bookList.filter((book) =>\n      book.title.toLowerCase().includes(title.toLowerCase())\n    );\n  };\n\n  return (\n    <div>\n      <SearchBar\n        onChange={handleSearchTextChange}\n        className=\"book-search-bar\"\n      />\n      <Books bookList={filterBooks(searchText)} />\n    </div>\n  );\n};\n\nexport default FilteredBooks;\n","import React from 'react';\nimport FilteredBooks from './filteredBooks';\n\nconst Home = (props) => {\n  return (\n    <div class=\"container\">\n      <FilteredBooks />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst AddBook = (props) => {\n  const [title, setTitle] = useState('');\n  const [writer, setWriter] = useState('');\n  const [description, setDescription] = useState('');\n  const [bookImage, setBookImage] = useState(null);\n  const history = useHistory();\n\n  const handleChange = (value, setValue) => {\n    setValue(value);\n  };\n\n  const handleSubmit = () => {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('writer', writer);\n    formData.append('description', description);\n    formData.append('bookimage', bookImage);\n    fetch('/api/addBook', { method: 'post', body: formData }).then((res) => {\n      console.log('added');\n      history.push('/');\n    });\n  };\n\n  return (\n    <div class=\"add-book-container\">\n      <form id=\"contact\" action=\"\" method=\"post\">\n        <h3>Add Book</h3>\n        <fieldset>\n          <input\n            placeholder=\"Book Title\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => handleChange(e.target.value, setTitle)}\n          />\n        </fieldset>\n        <fieldset>\n          <input\n            placeholder=\"Book Writer\"\n            type=\"text\"\n            value={writer}\n            onChange={(e) => handleChange(e.target.value, setWriter)}\n            tabindex=\"2\"\n            required\n          />\n        </fieldset>\n\n        <fieldset>\n          <textarea\n            placeholder=\"Book Description\"\n            value={description}\n            onChange={(e) => handleChange(e.target.value, setDescription)}\n            tabindex=\"5\"\n            required\n          ></textarea>\n        </fieldset>\n        <fieldset>\n          <label>Book Cover : </label>\n          <input\n            placeholder=\"Book cover\"\n            type=\"file\"\n            onChange={(e) => handleChange(e.target.files[0], setBookImage)}\n            tabindex=\"4\"\n            required\n          />\n        </fieldset>\n        <fieldset>\n          <button name=\"button\" onClick={handleSubmit} type=\"button\">\n            Add Book\n          </button>\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default AddBook;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport NavBar from './navbar';\nimport './style.css';\nimport BookDetail from './bookDetail';\nimport Home from './home';\nimport AddBook from './addBook';\n\nconst Main = () => {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/book/:bookId\">\n          <BookDetail />\n        </Route>\n        <Route path=\"/addBook\">\n          <AddBook />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Main;\n","import React, { useState } from 'react';\nimport Main from './components/main';\nimport UserContext from './context/userContext';\n\nfunction App() {\n  const [loginDetails, setLoginDetails] = useState({\n    isLogin: false,\n    user: null\n  });\n  return (\n    <UserContext.Provider value={[loginDetails, setLoginDetails]}>\n      <Main />\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}